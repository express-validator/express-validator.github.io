"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9710],{5318:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(7378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=l(n),d=r,f=m["".concat(p,".").concat(d)]||m[d]||u[d]||i;return n?a.createElement(f,o(o({ref:t},c),{},{components:n})):a.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[m]="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},947:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>f,frontMatter:()=>s,metadata:()=>l,toc:()=>m});var a=n(5773),r=n(808),i=(n(7378),n(5318)),o=["components"],s={id:"sanitization",title:"Sanitization"},p=void 0,l={unversionedId:"sanitization",id:"sanitization",title:"Sanitization",description:"Sometimes, receiving input in a HTTP request isn't only about making sure that",source:"@site/../docs/feature-sanitization.md",sourceDirName:".",slug:"/sanitization",permalink:"/docs/next/sanitization",draft:!1,editUrl:"https://github.com/express-validator/express-validator/edit/master/docs/../docs/feature-sanitization.md",tags:[],version:"current",frontMatter:{id:"sanitization",title:"Sanitization"},sidebar:"docs",previous:{title:"Getting Started",permalink:"/docs/next/"},next:{title:"Custom validators/sanitizers",permalink:"/docs/next/custom-validators-sanitizers"}},c={},m=[],u={toc:m},d="wrapper";function f(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)(d,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Sometimes, receiving input in a HTTP request isn't only about making sure that\nthe data is in the right format, but also that ",(0,i.kt)("strong",{parentName:"p"},"it is free of noise"),"."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/validatorjs/validator.js#sanitizers"},"validator.js provides a handful of sanitizers"),"\nthat can be used to take care of the data that comes in."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const express = require('express');\nconst { body } = require('express-validator');\n\nconst app = express();\napp.use(express.json());\n\napp.post(\n  '/comment',\n  body('email').isEmail().normalizeEmail(),\n  body('text').not().isEmpty().trim().escape(),\n  body('notifyOnReply').toBoolean(),\n  (req, res) => {\n    // Handle the request somehow\n  },\n);\n")),(0,i.kt)("p",null,"In the example above, we are validating ",(0,i.kt)("inlineCode",{parentName:"p"},"email")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"text")," fields,\nso we may take advantage of the same chain to apply some sanitization,\nlike e-mail normalization (",(0,i.kt)("inlineCode",{parentName:"p"},"normalizeEmail"),") and trimming (",(0,i.kt)("inlineCode",{parentName:"p"},"trim"),")/HTML escaping (",(0,i.kt)("inlineCode",{parentName:"p"},"escape"),").",(0,i.kt)("br",{parentName:"p"}),"\n","The ",(0,i.kt)("inlineCode",{parentName:"p"},"notifyOnReply")," field isn't validated, but it can still make use of the same ",(0,i.kt)("inlineCode",{parentName:"p"},"check")," function\nto convert it to a JavaScript boolean."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("strong",{parentName:"p"},"Important:")," please note that sanitization mutates the request.\nThis means that if ",(0,i.kt)("inlineCode",{parentName:"p"},"req.body.text")," was sent with the value ",(0,i.kt)("inlineCode",{parentName:"p"}," Hello world :>)"),", after the sanitization\nits value will be ",(0,i.kt)("inlineCode",{parentName:"p"},"Hello world :&gt;)"),".")))}f.isMDXComponent=!0}}]);