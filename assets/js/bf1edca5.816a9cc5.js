"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1400],{12158:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>d,toc:()=>l});var r=s(24246),n=s(71670);const t={title:"Migration from v5 to v6",toc_max_heading_level:4},a=void 0,d={id:"migration-v5-to-v6",title:"Migration from v5 to v6",description:"The migration process from express-validator v5.x.x to v6.x.x is manual.",source:"@site/versioned_docs/version-6.11.0/migration-v5-to-v6.md",sourceDirName:".",slug:"/migration-v5-to-v6",permalink:"/docs/6.11.0/migration-v5-to-v6",draft:!1,unlisted:!1,editUrl:"https://github.com/express-validator/express-validator/edit/master/docs/versioned_docs/version-6.11.0/migration-v5-to-v6.md",tags:[],version:"6.11.0",frontMatter:{title:"Migration from v5 to v6",toc_max_heading_level:4},sidebar:"docs",previous:{title:"FAQ",permalink:"/docs/6.11.0/faq"}},o={},l=[{value:"Support",id:"support",level:2},{value:"From legacy to check API",id:"from-legacy-to-check-api",level:2},{value:"express.js application set up",id:"expressjs-application-set-up",level:3},{value:"Route handlers",id:"route-handlers",level:3},{value:"Validations/sanitizations chains",id:"validationssanitizations-chains",level:4},{value:"Custom validators/sanitizers",id:"custom-validatorssanitizers",level:4},{value:"Validation errors",id:"validation-errors",level:4},{value:"Deprecations",id:"deprecations",level:2},{value:"Other breaking changes",id:"other-breaking-changes",level:2}];function c(e){const i={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.p,{children:"The migration process from express-validator v5.x.x to v6.x.x is manual.\nYou'll need to follow these steps after you've upgraded the package on your project."}),"\n",(0,r.jsx)(i.h2,{id:"support",children:"Support"}),"\n",(0,r.jsx)(i.p,{children:"Node 6 is no longer supported. You'll need to upgrade to Node 8 or newer."}),"\n",(0,r.jsx)(i.h2,{id:"from-legacy-to-check-api",children:"From legacy to check API"}),"\n",(0,r.jsxs)(i.admonition,{type:"info",children:[(0,r.jsxs)(i.p,{children:["These steps are only necessary if your project has been using the\n",(0,r.jsx)(i.a,{href:"/docs/5.3.0/legacy-api",children:"legacy express-validator API"}),"."]}),(0,r.jsxs)(i.p,{children:["If you are already using the ",(0,r.jsx)(i.a,{href:"/docs/6.11.0/check-api",children:"check APIs"}),", then you shouldn't need to do anything\nunder this section."]})]}),"\n",(0,r.jsx)(i.h3,{id:"expressjs-application-set-up",children:"express.js application set up"}),"\n",(0,r.jsxs)(i.p,{children:["express-validator is no longer a single middleware that you add to the request.\nYou'll need to remove the ",(0,r.jsx)(i.code,{children:"app.use(expressValidator())"})," line(s) from your express.js application set up."]}),"\n",(0,r.jsx)(i.admonition,{type:"note",children:(0,r.jsxs)(i.p,{children:["If your application passes options to ",(0,r.jsx)(i.code,{children:"expressValidator()"}),", please read about\n",(0,r.jsx)(i.a,{href:"#custom-validatorssanitizers",children:"custom validators/sanitizers"})," and ",(0,r.jsx)(i.a,{href:"#validation-errors",children:"validation errors"}),"."]})}),"\n",(0,r.jsx)(i.h3,{id:"route-handlers",children:"Route handlers"}),"\n",(0,r.jsx)(i.h4,{id:"validationssanitizations-chains",children:"Validations/sanitizations chains"}),"\n",(0,r.jsx)(i.p,{children:"It's necessary to make a couple of changes to how the validations/sanitizations are written."}),"\n",(0,r.jsx)(i.p,{children:"You'll need to replace the following snippets all around your codebase:"}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"From"}),(0,r.jsx)(i.th,{children:"To"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.code,{children:"req.check(field)"}),", ",(0,r.jsx)(i.code,{children:"req.assert(field)"}),", ",(0,r.jsx)(i.code,{children:"req.validate(field)"})]}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"await check(field)"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"req.checkBody(field)"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"await body(field)"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"req.checkCookies(field)"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"await cookie(field)"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"req.checkHeaders(field)"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"await header(field)"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"req.checkParams(field)"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"await param(field)"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"req.checkQuery(field)"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"await query(field)"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.code,{children:"req.sanitize(field)"}),", ",(0,r.jsx)(i.code,{children:"req.filter(field)"})]}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"await sanitize(field)"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"req.sanitizeBody(field)"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"await sanitizeBody(field)"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"req.sanitizeCookies(field)"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"await sanitizeCookie(field)"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"req.sanitizeHeaders(field)"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"await sanitizeHeader(field)"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"req.sanitizeParams(field)"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"await sanitizeParam(field)"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"req.sanitizeQuery(field)"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"await sanitizeQuery(field)"})})]})]})]}),"\n",(0,r.jsxs)(i.p,{children:["Additionally, you'll also have to append ",(0,r.jsx)(i.code,{children:".run(req)"})," to the end of those chains."]}),"\n",(0,r.jsx)(i.p,{children:"Example:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-diff",children:"+ const { body, sanitizeBody } = require('express-validator');\n\napp.post('/contact-us', (req, res) => {\n- req.checkBody('email').isEmail();\n+ await body('email').isEmail().run(req);\n\n- req.sanitizeBody('message')\n+ await sanitizeBody('message')\n  .escape()\n- .trim();\n+ .trim()\n+ .run(req);\n});\n"})}),"\n",(0,r.jsx)(i.h4,{id:"custom-validatorssanitizers",children:"Custom validators/sanitizers"}),"\n",(0,r.jsx)(i.p,{children:"Custom validators and sanitizers are no longer defined in the base express-validator middleware,\nwhich used to make them available to every validation chain."}),"\n",(0,r.jsxs)(i.p,{children:["You'll need to wrap their definition in each chain in ",(0,r.jsx)(i.code,{children:".custom()"})," or ",(0,r.jsx)(i.code,{children:".customSanitizer()"}),":"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-diff",children:"- const expressValidator = require('express-validator');\n+ const { body, sanitize } = require('express-validator');\n\nconst isEmailNotInUse = async value => { /* check if email is not taken by other user */ };\nconst muteOffensiveWords = value => { /* replace offensive words with *** */ };\n\n- app.use(expressValidator({\n-  customValidators: { isEmailNotInUse },\n-  customSanitizers: { muteOffensiveWords }\n- }));\n\napp.use('/sign-up', (req, res) => {\n- req.checkBody('email').isEmailNotInUse();\n+ await body('email').custom(isEmailNotInUse).run(req);\n});\n\napp.use('/contact-us', (req, res) => {\n- req.sanitize('message').muteOffensiveWords();\n+ await sanitize('message').customSanitizer(muteOffensiveWords).run(req);\n});\n"})}),"\n",(0,r.jsx)(i.h4,{id:"validation-errors",children:"Validation errors"}),"\n",(0,r.jsx)(i.p,{children:"You'll need to replace the following snippets in your codebase:"}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"From"}),(0,r.jsx)(i.th,{children:"To"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.code,{children:"req.validationErrors()"}),", ",(0,r.jsx)(i.code,{children:"await req.asyncValidationErrors()"})]}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"validationResult(req).array()"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.code,{children:"req.validationErrors(true)"}),", ",(0,r.jsx)(i.code,{children:"await req.asyncValidationErrors(true)"})]}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"validationResult(req).mapped()"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"req.getValidationResult()"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"validationResult(req)"})})]})]})]}),"\n",(0,r.jsxs)(i.p,{children:["If your express-validator middleware used to define an ",(0,r.jsx)(i.code,{children:"errorFormatter"})," option, you can create a custom\n",(0,r.jsx)(i.code,{children:"validationResult"})," function that defines it:"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-diff",children:"- const expressValidator = require('express-validator');\n+ const { body, validationResult } = require('express-validator');\n\nconst errorFormatter = (param, msg, value) => { /* return something */ };\n\n- app.use(expressValidator({\n-  errorFormatter\n- }));\n+ const myValidationResult = validationResult.withDefaults({ formatter: errorFormatter });\n\napp.use('/sign-up', (req, res) => {\n- req.checkBody('email').isEmailNotInUse();\n+ await body('email').custom(isEmailNotInUse).run(req);\n\n- const errors = req.validationErrors();\n+ const errors = myValidationResult(req).array();\n});\n"})}),"\n",(0,r.jsx)(i.h2,{id:"deprecations",children:"Deprecations"}),"\n",(0,r.jsxs)(i.p,{children:["Importing from ",(0,r.jsx)(i.code,{children:"express-validator/check"})," and ",(0,r.jsx)(i.code,{children:"express-validator/filter"})," is now deprecated,\nand will log a warning message to your application's console."]}),"\n",(0,r.jsxs)(i.p,{children:["You should now be able to simply import everything from ",(0,r.jsx)(i.code,{children:"express-validator"}),"."]}),"\n",(0,r.jsx)(i.h2,{id:"other-breaking-changes",children:"Other breaking changes"}),"\n",(0,r.jsxs)(i.p,{children:["Please check ",(0,r.jsx)(i.a,{href:"https://github.com/express-validator/express-validator/releases/tag/v6.0.0",children:"express-validator v6.0.0 release notes"}),"\nto learn about other breaking changes."]})]})}function h(e={}){const{wrapper:i}={...(0,n.a)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},71670:(e,i,s)=>{s.d(i,{Z:()=>d,a:()=>a});var r=s(27378);const n={},t=r.createContext(n);function a(e){const i=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),r.createElement(t.Provider,{value:i},e.children)}}}]);