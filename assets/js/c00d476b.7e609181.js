"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7754],{5318:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>f});var n=r(7378);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),c=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},d=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(r),m=a,f=p["".concat(i,".").concat(m)]||p[m]||u[m]||o;return r?n.createElement(f,s(s({ref:t},d),{},{components:r})):n.createElement(f,s({ref:t},d))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[p]="string"==typeof e?e:a,s[1]=l;for(var c=2;c<o;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4560:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>f,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var n=r(5773),a=r(808),o=(r(7378),r(5318)),s=["components"],l={id:"wildcards",title:"Wildcards"},i=void 0,c={unversionedId:"wildcards",id:"wildcards",title:"Wildcards",description:"Sometimes you will want to apply the same rules to all items of an array or all keys of some object.",source:"@site/../docs/feature-wildcards.md",sourceDirName:".",slug:"/wildcards",permalink:"/docs/next/wildcards",draft:!1,editUrl:"https://github.com/express-validator/express-validator/edit/master/docs/../docs/feature-wildcards.md",tags:[],version:"current",frontMatter:{id:"wildcards",title:"Wildcards"},sidebar:"docs",previous:{title:"Custom Error Messages",permalink:"/docs/next/custom-error-messages"},next:{title:"Schema Validation",permalink:"/docs/next/schema-validation"}},d={},p=[],u={toc:p},m="wrapper";function f(e){var t=e.components,r=(0,a.Z)(e,s);return(0,o.kt)(m,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Sometimes you will want to apply the same rules to all items of an array or all keys of some object.",(0,o.kt)("br",{parentName:"p"}),"\n","That's what the ",(0,o.kt)("inlineCode",{parentName:"p"},"*")," character -- also known as a wildcard -- is for."),(0,o.kt)("p",null,"For example, imagine you want to validate that all addresses have a valid postal code,\nand that the number of each address is sanitized as an integer."),(0,o.kt)("p",null,"We can do this with the following code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const express = require('express');\nconst { check } = require('express-validator');\n\nconst app = express();\napp.use(express.json());\n\napp.post(\n  '/addresses',\n  check('addresses.*.postalCode').isPostalCode(),\n  check('addresses.*.number').toInt(),\n  (req, res) => {\n    // Handle the request\n  },\n);\n")),(0,o.kt)("p",null,"This will handle cases where you send an array of addresses:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "addresses": [\n    { "postalCode": "2010", "number": "500" },\n    { "postalCode": "", "number": "501" }\n  ]\n}\n')),(0,o.kt)("p",null,"...or even cases where you want a predefined set of addresses:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "addresses": {\n    "home": { "postalCode": "", "number": "501" },\n    "work": { "postalCode": "2010", "number": "500" }\n  }\n}\n')))}f.isMDXComponent=!0}}]);