"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2211],{82191:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var s=n(62540),t=n(43023);const o={id:"validation-result-api",title:"validationResult()"},i=void 0,a={id:"validation-result-api",title:"validationResult()",description:"These methods are all available via require('express-validator').",source:"@site/versioned_docs/version-6.3.0/api-validation-result.md",sourceDirName:".",slug:"/validation-result-api",permalink:"/docs/6.3.0/validation-result-api",draft:!1,unlisted:!1,editUrl:"https://github.com/express-validator/express-validator/edit/master/docs/versioned_docs/version-6.3.0/api-validation-result.md",tags:[],version:"6.3.0",frontMatter:{id:"validation-result-api",title:"validationResult()"},sidebar:"api",previous:{title:"matchedData()",permalink:"/docs/6.3.0/matched-data-api"}},l={},d=[{value:"<code>validationResult(req)</code>",id:"validationresultreq",level:2},{value:"<code>.withDefaults(options)</code>",id:"withdefaultsoptions",level:3},{value:"<code>Result</code>",id:"result",level:2},{value:"<code>.isEmpty()</code>",id:"isempty",level:3},{value:"<code>.formatWith(formatter)</code>",id:"formatwithformatter",level:3},{value:"<code>.array([options])</code>",id:"arrayoptions",level:3},{value:"<code>.mapped()</code>",id:"mapped",level:3},{value:"<code>.throw()</code>",id:"throw",level:3}];function c(e){const r={a:"a",blockquote:"blockquote",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:["These methods are all available via ",(0,s.jsx)(r.code,{children:"require('express-validator')"}),"."]}),"\n",(0,s.jsx)(r.h2,{id:"validationresultreq",children:(0,s.jsx)(r.code,{children:"validationResult(req)"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"req"}),": the express request object"]}),"\n"]}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"Returns:"})," a ",(0,s.jsx)(r.a,{href:"#result",children:(0,s.jsx)(r.code,{children:"Result"})})," object"]}),"\n"]}),"\n",(0,s.jsxs)(r.p,{children:["Extracts the validation errors from a request and makes them available in a ",(0,s.jsx)(r.a,{href:"#result",children:(0,s.jsx)(r.code,{children:"Result"})})," object."]}),"\n",(0,s.jsxs)(r.p,{children:["Each error returned by ",(0,s.jsx)(r.a,{href:"#array-options",children:(0,s.jsx)(r.code,{children:".array()"})})," and ",(0,s.jsx)(r.a,{href:"#mapped",children:(0,s.jsx)(r.code,{children:".mapped()"})})," methods\nhave the following format ",(0,s.jsx)(r.em,{children:"by default"}),":"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:'{\n  "msg": "The error message",\n  "param": "param.name.with.index[0]",\n  "value": "param value",\n  // Location of the param that generated this error.\n  // It\'s either body, query, params, cookies or headers.\n  "location": "body",\n\n  // nestedErrors only exist when using the oneOf function\n  "nestedErrors": [{ ... }]\n}\n'})}),"\n",(0,s.jsx)(r.h3,{id:"withdefaultsoptions",children:(0,s.jsx)(r.code,{children:".withDefaults(options)"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"options"})," ",(0,s.jsx)(r.em,{children:"(optional)"}),": an object of options. Defaults to ",(0,s.jsx)(r.code,{children:"{ formatter: error => error }"})]}),"\n"]}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"Returns:"})," a new ",(0,s.jsx)(r.a,{href:"#validationresultreq",children:(0,s.jsx)(r.code,{children:"validationResult"})})," function, using the provided options"]}),"\n"]}),"\n",(0,s.jsxs)(r.p,{children:["Creates a new ",(0,s.jsx)(r.code,{children:"validationResult()"}),"-like function with default options passed to the generated\n",(0,s.jsx)(r.a,{href:"#result",children:(0,s.jsx)(r.code,{children:"Result"})})," instance."]}),"\n",(0,s.jsx)(r.p,{children:"Below is an example which sets a default error formatter:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"const { validationResult } = require('express-validator');\n\nconst myValidationResult = validationResult.withDefaults({\n  formatter: (error) => {\n    return {\n      myLocation: error.location,\n    };\n  }\n});\n\napp.post('/create-user', yourValidationChains, (req, res) => {\n  // errors will be like [{ myLocation: 'body' }, { myLocation: 'query' }], etc\n  const errors = myValidationResult(req).array();\n});\n"})}),"\n",(0,s.jsx)(r.h2,{id:"result",children:(0,s.jsx)(r.code,{children:"Result"})}),"\n",(0,s.jsx)(r.p,{children:"An object that holds the current state of validation errors in a request and allows access to it in\na variety of ways."}),"\n",(0,s.jsx)(r.h3,{id:"isempty",children:(0,s.jsx)(r.code,{children:".isEmpty()"})}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"Returns:"})," a boolean indicating whether this result object contains no errors at all."]}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"app.post('/create-user', yourValidationChains, (req, res) => {\n  const result = validationResult(req);\n  const hasErrors = !result.isEmpty();\n  // do something if hasErrors is true\n});\n"})}),"\n",(0,s.jsx)(r.h3,{id:"formatwithformatter",children:(0,s.jsx)(r.code,{children:".formatWith(formatter)"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"formatter(error)"}),": the function to use to format when returning errors.",(0,s.jsx)(r.br,{}),"\n","The ",(0,s.jsx)(r.code,{children:"error"})," argument is an object in the format of ",(0,s.jsx)(r.code,{children:"{ location, msg, param, value, nestedErrors }"}),", as described above."]}),"\n"]}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"Returns:"})," a new ",(0,s.jsx)(r.code,{children:"Result"})," instance"]}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"app.post('/create-user', yourValidationChains, (req, res, next) => {\n  const errorFormatter = ({ location, msg, param, value, nestedErrors }) => {\n    // Build your resulting errors however you want! String, object, whatever - it works!\n    return `${location}[${param}]: ${msg}`;\n  };\n  const result = validationResult(req).formatWith(errorFormatter);\n  if (!result.isEmpty()) {\n    // Response will contain something like\n    // { errors: [ \"body[password]: must be at least 10 chars long\" ] }\n    return res.json({ errors: result.array() });\n  }\n\n  // Handle your request as if no errors happened\n});\n"})}),"\n",(0,s.jsx)(r.h3,{id:"arrayoptions",children:(0,s.jsx)(r.code,{children:".array([options])"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"options"})," ",(0,s.jsx)(r.em,{children:"(optional)"}),": an object of options. Defaults to ",(0,s.jsx)(r.code,{children:"{ onlyFirstError: false }"})]}),"\n"]}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"Returns:"})," an array of validation errors."]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"Gets all validation errors contained in this result object."}),"\n",(0,s.jsxs)(r.p,{children:["If the option ",(0,s.jsx)(r.code,{children:"onlyFirstError"})," is set to ",(0,s.jsx)(r.code,{children:"true"}),", then only the first\nerror for each field will be included."]}),"\n",(0,s.jsx)(r.h3,{id:"mapped",children:(0,s.jsx)(r.code,{children:".mapped()"})}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"Returns:"})," an object where the keys are the field names, and the values are the validation errors"]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"Gets the first validation error of each failed field in the form of an object."}),"\n",(0,s.jsx)(r.h3,{id:"throw",children:(0,s.jsx)(r.code,{children:".throw()"})}),"\n",(0,s.jsx)(r.p,{children:"If this result object has errors, then this method will throw an exception\ndecorated with the same validation result API."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"try {\n  validationResult(req).throw();\n  // Oh look at ma' success! All validations passed!\n} catch (err) {\n  console.log(err.mapped()); // Oh noes!\n}\n"})})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},43023:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>a});var s=n(63696);const t={},o=s.createContext(t);function i(e){const r=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(o.Provider,{value:r},e.children)}}}]);