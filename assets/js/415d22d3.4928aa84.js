"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5326],{5318:(e,n,r)=>{r.d(n,{Zo:()=>d,kt:()=>m});var a=r(7378);function t(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){t(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,a,t=function(e,n){if(null==e)return{};var r,a,t={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],n.indexOf(r)>=0||(t[r]=e[r]);return t}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var l=a.createContext({}),u=function(e){var n=a.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},d=function(e){var n=u(e.components);return a.createElement(l.Provider,{value:n},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},v=a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=u(r),v=t,m=p["".concat(l,".").concat(v)]||p[v]||c[v]||i;return r?a.createElement(m,o(o({ref:n},d),{},{components:r})):a.createElement(m,o({ref:n},d))}));function m(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var i=r.length,o=new Array(i);o[0]=v;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[p]="string"==typeof e?e:t,o[1]=s;for(var u=2;u<i;u++)o[u]=r[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}v.displayName="MDXCreateElement"},9798:(e,n,r)=>{r.d(n,{Z:()=>o});var a=r(7378),t=r(8944);const i="tabItem_wHwb";function o(e){var n=e.children,r=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",className:(0,t.Z)(i,o),hidden:r},n)}},3337:(e,n,r)=>{r.d(n,{Z:()=>v});var a=r(5773),t=r(7378),i=r(8944),o=r(6457),s=r(784),l=r(9947),u=r(3457);const d="tabList_J5MA",p="tabItem_l0OV";function c(e){var n,r,o=e.lazy,c=e.block,v=e.defaultValue,m=e.values,f=e.groupId,h=e.className,y=t.Children.map(e.children,(function(e){if((0,t.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=m?m:y.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),g=(0,s.l)(b,(function(e,n){return e.value===n.value}));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var w=null===v?v:null!=(n=null!=v?v:null==(r=y.find((function(e){return e.props.default})))?void 0:r.props.value)?n:y[0].props.value;if(null!==w&&!b.some((function(e){return e.value===w})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+w+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var x=(0,l.U)(),k=x.tabGroupChoices,E=x.setTabGroupChoices,N=(0,t.useState)(w),O=N[0],q=N[1],T=[],j=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var C=k[f];null!=C&&C!==O&&b.some((function(e){return e.value===C}))&&q(C)}var P=function(e){var n=e.currentTarget,r=T.indexOf(n),a=b[r].value;a!==O&&(j(n),q(a),null!=f&&E(f,String(a)))},R=function(e){var n,r=null;switch(e.key){case"Enter":P(e);break;case"ArrowRight":var a,t=T.indexOf(e.currentTarget)+1;r=null!=(a=T[t])?a:T[0];break;case"ArrowLeft":var i,o=T.indexOf(e.currentTarget)-1;r=null!=(i=T[o])?i:T[T.length-1]}null==(n=r)||n.focus()};return t.createElement("div",{className:(0,i.Z)("tabs-container",d)},t.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":c},h)},b.map((function(e){var n=e.value,r=e.label,o=e.attributes;return t.createElement("li",(0,a.Z)({role:"tab",tabIndex:O===n?0:-1,"aria-selected":O===n,key:n,ref:function(e){return T.push(e)},onKeyDown:R,onClick:P},o,{className:(0,i.Z)("tabs__item",p,null==o?void 0:o.className,{"tabs__item--active":O===n})}),null!=r?r:n)}))),o?(0,t.cloneElement)(y.filter((function(e){return e.props.value===O}))[0],{className:"margin-top--md"}):t.createElement("div",{className:"margin-top--md"},y.map((function(e,n){return(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==O})}))))}function v(e){var n=(0,o.Z)();return t.createElement(c,(0,a.Z)({key:String(n)},e))}},5464:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>f,frontMatter:()=>u,metadata:()=>p,toc:()=>v});var a=r(5773),t=r(808),i=(r(7378),r(5318)),o=r(3337),s=r(9798),l=["components"],u={id:"running-imperatively",title:"Running validations imperatively"},d=void 0,p={unversionedId:"running-imperatively",id:"version-6.13.0/running-imperatively",title:"Running validations imperatively",description:"express-validator favors the declarative way of doing things that express middlewares bring.",source:"@site/versioned_docs/version-6.13.0/feature-running-imperatively.md",sourceDirName:".",slug:"/running-imperatively",permalink:"/docs/6.13.0/running-imperatively",draft:!1,editUrl:"https://github.com/express-validator/express-validator/edit/master/docs/versioned_docs/version-6.13.0/feature-running-imperatively.md",tags:[],version:"6.13.0",frontMatter:{id:"running-imperatively",title:"Running validations imperatively"},sidebar:"version-6.13.0/docs",previous:{title:"Whole Body Validation",permalink:"/docs/6.13.0/whole-body-validation"},next:{title:"Validation middlewares",permalink:"/docs/6.13.0/check-api"}},c={},v=[{value:"Example: standardized validation error response",id:"example-standardized-validation-error-response",level:2},{value:"Example: validating with a condition",id:"example-validating-with-a-condition",level:2}],m={toc:v};function f(e){var n=e.components,r=(0,t.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},m,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"express-validator favors the declarative way of doing things that express middlewares bring.\nThis means most of the APIs ",(0,i.kt)("em",{parentName:"p"},"look and work better")," when simply passed into an express route handler."),(0,i.kt)("p",null,"You can, however, give control of running these validations to your own middleware/route handler.",(0,i.kt)("br",{parentName:"p"}),"\n","This is possible with the use of the declarative method ",(0,i.kt)("inlineCode",{parentName:"p"},"run(req)"),", available on\n",(0,i.kt)("a",{parentName:"p",href:"/docs/6.13.0/validation-chain-api#runreq-options"},"validation chain"),", ",(0,i.kt)("a",{parentName:"p",href:"/docs/6.13.0/sanitization-chain-api#runreq"},"sanitization chain"),", ",(0,i.kt)("a",{parentName:"p",href:"/docs/6.13.0/check-api#checkschemaschema"},(0,i.kt)("inlineCode",{parentName:"a"},"checkSchema"))," and ",(0,i.kt)("a",{parentName:"p",href:"/docs/6.13.0/check-api#oneofvalidationchains-message"},(0,i.kt)("inlineCode",{parentName:"a"},"oneOf")),"."),(0,i.kt)("p",null,"Check the examples below to understand how this method can help you:"),(0,i.kt)("h2",{id:"example-standardized-validation-error-response"},"Example: standardized validation error response"),(0,i.kt)(o.Z,{mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"const express = require('express');\nconst { validationResult, ValidationChain } = require('express-validator');\n// can be reused by many routes\n\n// parallel processing\nconst validate = validations => {\n  return async (req, res, next) => {\n    await Promise.all(validations.map(validation => validation.run(req)));\n\n    const errors = validationResult(req);\n    if (errors.isEmpty()) {\n      return next();\n    }\n\n    res.status(400).json({ errors: errors.array() });\n  };\n};\n\n// sequential processing, stops running validations chain if the previous one have failed.\nconst validate = validations => {\n  return async (req, res, next) => {\n    for (let validation of validations) {\n      const result = await validation.run(req);\n      if (result.errors.length) break;\n    }\n\n    const errors = validationResult(req);\n    if (errors.isEmpty()) {\n      return next();\n    }\n\n    res.status(400).json({ errors: errors.array() });\n  };\n};\n"))),(0,i.kt)(s.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import express from 'express';\nimport { validationResult, ValidationChain } from 'express-validator';\n// can be reused by many routes\n\n// parallel processing\nconst validate = (validations: ValidationChain[]) => {\n  return async (req: express.Request, res: express.Response, next: express.NextFunction) => {\n    await Promise.all(validations.map(validation => validation.run(req)));\n\n    const errors = validationResult(req);\n    if (errors.isEmpty()) {\n      return next();\n    }\n\n    res.status(400).json({ errors: errors.array() });\n  };\n};\n\n// sequential processing, stops running validations chain if the previous one have failed.\nconst validate = (validations: ValidationChain[]) => {\n  return async (req: express.Request, res: express.Response, next: express.NextFunction) => {\n    for (let validation of validations) {\n      const result = await validation.run(req);\n      if (result.errors.length) break;\n    }\n\n    const errors = validationResult(req);\n    if (errors.isEmpty()) {\n      return next();\n    }\n\n    res.status(400).json({ errors: errors.array() });\n  };\n};\n")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"app.post('/api/create-user', validate([\n  body('email').isEmail(),\n  body('password').isLength({ min: 6 })\n]), async (req, res, next) => {\n  // request is guaranteed to not have any validation errors.\n  const user = await User.create({ ... });\n});\n")),(0,i.kt)("h2",{id:"example-validating-with-a-condition"},"Example: validating with a condition"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"app.post(\n  '/update-settings',\n  body('email').isEmail(),\n  body('password').optional().isLength({ min: 6 }),\n  async (req, res, next) => {\n    // if a password has been provided, then a confirmation must also be provided.\n    if (req.body.password) {\n      await body('passwordConfirmation')\n        .equals(req.body.password)\n        .withMessage('passwords do not match')\n        .run(req);\n    }\n\n    // Check the validation errors, and update the user's settings.\n  },\n);\n")))}f.isMDXComponent=!0}}]);