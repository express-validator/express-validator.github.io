"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2625],{94246:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var t=r(24246),o=r(71670);const s={id:"validation-result-api",title:"Validation Result API"},i=void 0,a={id:"validation-result-api",title:"Validation Result API",description:"This is an unified API for dealing with errors, both in legacy and check APIs.",source:"@site/versioned_docs/version-5.2.0/api-validation-result.md",sourceDirName:".",slug:"/validation-result-api",permalink:"/docs/5.2.0/validation-result-api",draft:!1,unlisted:!1,editUrl:"https://github.com/express-validator/express-validator/edit/master/docs/versioned_docs/version-5.2.0/api-validation-result.md",tags:[],version:"5.2.0",frontMatter:{id:"validation-result-api",title:"Validation Result API"},sidebar:"api",previous:{title:"Validation Chain API",permalink:"/docs/5.2.0/validation-chain-api"},next:{title:"Legacy API",permalink:"/docs/5.2.0/legacy-api"}},l={},d=[{value:"<code>.isEmpty()</code>",id:"isempty",level:2},{value:"<code>.formatWith(formatter)</code>",id:"formatwithformatter",level:2},{value:"<code>.array([options])</code>",id:"arrayoptions",level:2},{value:"<code>.mapped()</code>",id:"mapped",level:2},{value:"<code>.throw()</code>",id:"throw",level:2},{value:"<code>.withDefaults(options)</code>",id:"withdefaultsoptions",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"This is an unified API for dealing with errors, both in legacy and check APIs."}),"\n",(0,t.jsxs)(n.p,{children:["Each error returned by ",(0,t.jsx)(n.code,{children:".array()"})," and ",(0,t.jsx)(n.code,{children:".mapped()"})," methods have the following format by default:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'{\n  "msg": "The error message",\n  "param": "param.name.with.index[0]",\n  "value": "param value",\n  // Location of the param that generated this error.\n  // It\'s either body, query, params, cookies or headers.\n  "location": "body",\n\n  // nestedErrors only exist when using the oneOf function\n  "nestedErrors": [{ ... }]\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"isempty",children:(0,t.jsx)(n.code,{children:".isEmpty()"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Returns:"})," a boolean indicating whether this result object contains no errors at all."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"formatwithformatter",children:(0,t.jsx)(n.code,{children:".formatWith(formatter)"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"formatter(error)"}),": the function to use to format when returning errors.",(0,t.jsx)(n.br,{}),"\n","The ",(0,t.jsx)(n.code,{children:"error"})," argument is an object in the format of ",(0,t.jsx)(n.code,{children:"{ location, msg, param, value, nestedErrors }"}),", as described above."]}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Returns:"})," this validation result instance"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"app.post('/create-user', yourValidationChains, (req, res, next) => {\n  const errorFormatter = ({ location, msg, param, value, nestedErrors }) => {\n    // Build your resulting errors however you want! String, object, whatever - it works!\n    return `${location}[${param}]: ${msg}`;\n  };\n  const result = validationResult(req).formatWith(errorFormatter);\n  if (!result.isEmpty()) {\n    // Response will contain something like\n    // { errors: [ \"body[password]: must be at least 10 chars long\" ] }\n    return res.json({ errors: result.array() });\n  }\n\n  // Handle your request as if no errors happened\n});\n"})}),"\n",(0,t.jsx)(n.h2,{id:"arrayoptions",children:(0,t.jsx)(n.code,{children:".array([options])"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"options"})," ",(0,t.jsx)(n.em,{children:"(optional)"}),": an object of options. Defaults to ",(0,t.jsx)(n.code,{children:"{ onlyFirstError: false }"})]}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Returns:"})," an array of validation errors."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Gets all validation errors contained in this result object."}),"\n",(0,t.jsxs)(n.p,{children:["If the option ",(0,t.jsx)(n.code,{children:"onlyFirstError"})," is set to ",(0,t.jsx)(n.code,{children:"true"}),", then only the first\nerror for each field will be included."]}),"\n",(0,t.jsx)(n.h2,{id:"mapped",children:(0,t.jsx)(n.code,{children:".mapped()"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Returns:"})," an object where the keys are the field names, and the values are the validation errors"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Gets the first validation error of each failed field in the form of an object."}),"\n",(0,t.jsx)(n.h2,{id:"throw",children:(0,t.jsx)(n.code,{children:".throw()"})}),"\n",(0,t.jsx)(n.p,{children:"If this result object has errors, then this method will throw an exception\ndecorated with the same validation result API."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"try {\n  validationResult(req).throw();\n  // Oh look at ma' success! All validations passed!\n} catch (err) {\n  console.log(err.mapped()); // Oh noes!\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"withdefaultsoptions",children:(0,t.jsx)(n.code,{children:".withDefaults(options)"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"options"})," ",(0,t.jsx)(n.em,{children:"(optional)"}),": an object of options. Defaults to ",(0,t.jsx)(n.code,{children:"{ formatter: error => error }"})]}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Returns:"})," a new ",(0,t.jsx)(n.a,{href:"/docs/5.2.0/check-api#validationresultreq",children:(0,t.jsx)(n.code,{children:"validationResult"})})," function is returned, using the provided options"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This is useful when you have a consistent set of options you would like to use for all validation results throughout your application."}),"\n",(0,t.jsx)(n.p,{children:"Below is an example which sets a default error formatter:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"const { validationResult } = require('express-validator/check');\n\nconst result = validationResult.withDefaults({\n    formatter: (error) => {\n        return {\n            myLocation: error.location,\n        };\n    }\n});\n\nmodule.exports = result;\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},71670:(e,n,r)=>{r.d(n,{Z:()=>a,a:()=>i});var t=r(27378);const o={},s=t.createContext(o);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);